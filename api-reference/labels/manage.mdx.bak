---
title: "Gerenciar Labels"
api: "POST /chat/labels"
description: "Gerenciar labels (etiquetas) associadas a um chat"
---

Atualiza as labels de organização e categorização de um chat específico, oferecendo três modos distintos de operação para máxima flexibilidade.

## Modos de Operação

<AccordionGroup>
  <Accordion title="Definir Todas as Labels" icon="tags">
    Define o conjunto completo de labels, substituindo todas as existentes.

    **Parâmetro:** `labelids` (array)

    **Comportamento:**
    - Remove todas as labels atuais do chat
    - Aplica apenas as labels fornecidas no array
    - Útil para redefinir completamente a categorização
    - Permite aplicar múltiplas labels de uma vez

    **Exemplo:** `["10", "20", "30"]` - Aplica labels 10, 20 e 30, removendo quaisquer outras.
  </Accordion>

  <Accordion title="Adicionar Label Individual" icon="plus">
    Adiciona uma única label sem afetar as existentes.

    **Parâmetro:** `add_labelid` (string)

    **Comportamento:**
    - Mantém todas as labels já aplicadas
    - Adiciona a nova label ao conjunto existente
    - Ideal para categorização incremental
    - Não causa erro se a label já existir

    **Exemplo:** `"10"` - Adiciona label 10 às labels existentes.
  </Accordion>

  <Accordion title="Remover Label Individual" icon="minus">
    Remove uma única label sem afetar as outras.

    **Parâmetro:** `remove_labelid` (string)

    **Comportamento:**
    - Mantém todas as outras labels aplicadas
    - Remove apenas a label especificada
    - Útil para ajustes pontuais de categorização
    - Não causa erro se a label não existir

    **Exemplo:** `"20"` - Remove apenas a label 20, mantendo as demais.
  </Accordion>

  <Accordion title="Validação e Regras" icon="circle-exclamation">
    Regras importantes para uso correto do endpoint.

    **Restrições:**
    - Use apenas UM dos três parâmetros por requisição
    - Labels devem existir previamente (use GET /labels para listar)
    - IDs de labels inválidos serão rejeitados
    - Formato dos IDs: string numérica (ex: "10", "20")

    **Importante:** Não combine `labelids`, `add_labelid` e `remove_labelid` na mesma requisição.
  </Accordion>
</AccordionGroup>

### Authorization

<ParamField path="api_key" type="string" required>
  Chave de autenticação da sua conexão, utilizada no header Authorization como Bearer Token. <br />
  Você encontra sua API Key no botão **API** da sua conexão no painel ZapClass. <br />
  A chave sempre começa com o prefixo `zc_`. <br />
  Exemplo: `zc_6FrX2qjM4bHT9pR6cC0sD8wLkG3nE2tZfV5uN1aP`
</ParamField>

### Body Parameters

<ParamField path="number" type="string" required>
  Número do chat ou ID do grupo. <br />
  Aceita formato internacional ou JID do WhatsApp. <br />
  Exemplo: `5511999999999` ou `120363123456789012@g.us`
</ParamField>

<ParamField path="labelids" type="array">
  Lista completa de IDs das labels a aplicar ao chat. <br />
  Substitui todas as labels existentes. <br />
  **Não combine com add_labelid ou remove_labelid.** <br />
  Exemplo: `["10", "20", "30"]`
</ParamField>

<ParamField path="add_labelid" type="string">
  ID da label a ser adicionada ao chat. <br />
  Mantém labels existentes e adiciona esta. <br />
  **Não combine com labelids ou remove_labelid.** <br />
  Exemplo: `"10"`
</ParamField>

<ParamField path="remove_labelid" type="string">
  ID da label a ser removida do chat. <br />
  Mantém outras labels e remove apenas esta. <br />
  **Não combine com labelids ou add_labelid.** <br />
  Exemplo: `"20"`
</ParamField>

<Warning>
  **Atenção:** Use apenas UM dos três parâmetros de labels por requisição: `labelids`, `add_labelid` OU `remove_labelid`.
</Warning>

<RequestExample>

```bash cURL - Definir todas as labels
curl -X POST https://zapclass.com.br/api/chat/labels \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer zc_6FrX2qjM4bHT9pR6cC0sD8wLkG3nE2tZfV5uN1aP" \
  -d '{
    "number": "5511999999999",
    "labelids": ["10", "20", "30"]
  }'
```

```bash cURL - Adicionar uma label
curl -X POST https://zapclass.com.br/api/chat/labels \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer zc_6FrX2qjM4bHT9pR6cC0sD8wLkG3nE2tZfV5uN1aP" \
  -d '{
    "number": "5511999999999",
    "add_labelid": "10"
  }'
```

```bash cURL - Remover uma label
curl -X POST https://zapclass.com.br/api/chat/labels \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer zc_6FrX2qjM4bHT9pR6cC0sD8wLkG3nE2tZfV5uN1aP" \
  -d '{
    "number": "5511999999999",
    "remove_labelid": "20"
  }'
```

```bash cURL - Remover todas as labels
curl -X POST https://zapclass.com.br/api/chat/labels \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer zc_6FrX2qjM4bHT9pR6cC0sD8wLkG3nE2tZfV5uN1aP" \
  -d '{
    "number": "5511999999999",
    "labelids": []
  }'
```

```javascript JavaScript - Definir labels
const response = await fetch("https://zapclass.com.br/api/chat/labels", {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
    Authorization: "Bearer zc_6FrX2qjM4bHT9pR6cC0sD8wLkG3nE2tZfV5uN1aP",
  },
  body: JSON.stringify({
    number: "5511999999999",
    labelids: ["10", "20", "30"]
  }),
});

const data = await response.json();
console.log("Labels atualizadas:", data.labels);
```

```javascript JavaScript - Adicionar label
const response = await fetch("https://zapclass.com.br/api/chat/labels", {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
    Authorization: "Bearer zc_6FrX2qjM4bHT9pR6cC0sD8wLkG3nE2tZfV5uN1aP",
  },
  body: JSON.stringify({
    number: "5511999999999",
    add_labelid: "10"
  }),
});

const data = await response.json();
if (data.success) {
  console.log("Label adicionada com sucesso");
  console.log("Total de labels:", data.labels.length);
}
```

```javascript JavaScript - Gerenciador de labels
class LabelManager {
  constructor(token) {
    this.token = token;
    this.baseUrl = "https://zapclass.com.br/api";
  }

  async setLabels(number, labelIds) {
    return this._request({ number, labelids: labelIds });
  }

  async addLabel(number, labelId) {
    return this._request({ number, add_labelid: labelId });
  }

  async removeLabel(number, labelId) {
    return this._request({ number, remove_labelid: labelId });
  }

  async clearLabels(number) {
    return this._request({ number, labelids: [] });
  }

  async _request(body) {
    const response = await fetch(`${this.baseUrl}/chat/labels`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Token: this.token,
      },
      body: JSON.stringify(body),
    });
    return response.json();
  }
}

// Uso
const manager = new LabelManager("zt_BppKZWtzvj1X2SbJAuOSkA0Z63uDBQ0wkb28NJaloKeOUnHk");

await manager.addLabel("5511999999999", "10");
await manager.setLabels("5511999999999", ["10", "20"]);
await manager.removeLabel("5511999999999", "20");
```

```php PHP - Definir labels
<?php
$ch = curl_init('https://zapclass.com.br/api/chat/labels');

$payload = [
    "number" => "5511999999999",
    "labelids" => ["10", "20", "30"]
];

curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($payload));
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'Authorization: Bearer zc_6FrX2qjM4bHT9pR6cC0sD8wLkG3nE2tZfV5uN1aP'
]);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

$response = curl_exec($ch);
$data = json_decode($response, true);

if ($data['success']) {
    echo "Labels aplicadas: " . implode(", ", $data['labels']);
} else {
    echo "Erro: " . $data['message'];
}
curl_close($ch);
?>
```

```php PHP - Adicionar label
<?php
$ch = curl_init('https://zapclass.com.br/api/chat/labels');

$payload = [
    "number" => "5511999999999",
    "add_labelid" => "10"
];

curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($payload));
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'Content-Type: application/json',
    'Authorization: Bearer zc_6FrX2qjM4bHT9pR6cC0sD8wLkG3nE2tZfV5uN1aP'
]);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

$response = curl_exec($ch);
$data = json_decode($response, true);

if ($data['success']) {
    echo "Label {$payload['add_labelid']} adicionada\n";
    echo "Total de labels no chat: " . count($data['labels']);
}
curl_close($ch);
?>
```

```php PHP - Classe gerenciadora
<?php
class ChatLabelManager {
    private $token;
    private $baseUrl = 'https://zapclass.com.br/api';

    public function __construct($token) {
        $this->token = $token;
    }

    public function setLabels($number, $labelIds) {
        return $this->request([
            'number' => $number,
            'labelids' => $labelIds
        ]);
    }

    public function addLabel($number, $labelId) {
        return $this->request([
            'number' => $number,
            'add_labelid' => $labelId
        ]);
    }

    public function removeLabel($number, $labelId) {
        return $this->request([
            'number' => $number,
            'remove_labelid' => $labelId
        ]);
    }

    private function request($payload) {
        $ch = curl_init($this->baseUrl . '/chat/labels');

        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($payload));
        curl_setopt($ch, CURLOPT_HTTPHEADER, [
            'Content-Type: application/json',
            "Token: {$this->token}"
        ]);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

        $response = curl_exec($ch);
        curl_close($ch);

        return json_decode($response, true);
    }
}

// Uso
$manager = new ChatLabelManager('zt_BppKZWtzvj1X2SbJAuOSkA0Z63uDBQ0wkb28NJaloKeOUnHk');

$manager->addLabel('5511999999999', '10');
$manager->setLabels('5511999999999', ['10', '20']);
$manager->removeLabel('5511999999999', '20');
?>
```

</RequestExample>

<ResponseExample>

```json 200 - Labels atualizadas
{
  "success": true,
  "message": "Labels updated successfully",
  "chat": {
    "number": "5511999999999",
    "labels": ["10", "20", "30"]
  }
}
```

```json 200 - Label adicionada
{
  "success": true,
  "message": "Label added successfully",
  "chat": {
    "number": "5511999999999",
    "labels": ["10", "20", "30", "40"]
  }
}
```

```json 200 - Label removida
{
  "success": true,
  "message": "Label removed successfully",
  "chat": {
    "number": "5511999999999",
    "labels": ["10", "30"]
  }
}
```

```json 400 - Parâmetros inválidos
{
  "success": false,
  "message": "Use apenas um dos parâmetros: labelids, add_labelid ou remove_labelid"
}
```

```json 400 - Label inexistente
{
  "success": false,
  "message": "Label ID '99' não existe. Use GET /labels para listar labels disponíveis"
}
```

```json 404 - Chat não encontrado
{
  "success": false,
  "message": "Chat não encontrado"
}
```

</ResponseExample>
